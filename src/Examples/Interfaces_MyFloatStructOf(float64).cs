//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------
using System.Runtime.CompilerServices;

namespace go
{
    public static unsafe partial class main_package
    {
        public partial struct MyFloat
        {
            // Value of the MyFloat struct
            private readonly double m_value;

            public MyFloat(double value) => m_value = value;

            // Enable implicit conversions between double and MyFloat struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator MyFloat(double value) => new MyFloat(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator double(MyFloat value) => value.m_value;
            
            // Enable comparisons between nil and MyFloat struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(MyFloat value, NilType nil) => value.Equals(default(MyFloat));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(MyFloat value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, MyFloat value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, MyFloat value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator MyFloat(NilType nil) => default(MyFloat);
        }
    }
}
