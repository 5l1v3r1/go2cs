// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace go2cs.Templates
{
    using System.Collections.Generic;
    using System.Linq;
    using go2cs.Metadata;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class InterfaceTypeTemplate : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 1 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
 // This template creates a <PackageName>_<InterfaceName>Interface.cs file 
            
            #line default
            #line hidden
            this.Write(@"//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on ");
            
            #line 13 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GeneratedTime));
            
            #line default
            #line hidden
            this.Write("\r\n// </auto-generated>\r\n//-------------------------------------------------------" +
                    "--\r\nusing System;\r\nusing System.CodeDom.Compiler;\r\nusing System.Diagnostics;\r\nus" +
                    "ing System.Reflection;\r\nusing System.Runtime.CompilerServices;\r\n");
            
            #line 21 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(Environment.NewLine, UsingStatements)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 22 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
if (!NamespacePrefix.Equals("go")) {
            
            #line default
            #line hidden
            this.Write("using go;\r\n");
            
            #line 24 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n#pragma warning disable CS0660, CS0661\r\n\r\n");
            
            #line 28 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespaceHeader));
            
            #line default
            #line hidden
            this.Write("\r\n    public static partial class ");
            
            #line 29 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_package\r\n    {\r\n        [");
            
            #line 31 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GeneratedCodeAttribute));
            
            #line default
            #line hidden
            this.Write("]\r\n        ");
            
            #line 32 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Scope));
            
            #line default
            #line hidden
            this.Write(" struct ");
            
            #line 32 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> : ");
            
            #line 32 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n            private T m_target;");
            
            #line 34 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"

        
            foreach (var decl in Functions)
            {
                
            
            #line default
            #line hidden
            
            #line 38 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(new InterfaceFuncDeclTemplate
                {
                    FunctionName = decl.Name,
                    Scope = "public",
                    ParameterSignature = decl.Signature.GenerateParametersSignature(false),
                    ParameterNames = GetParameterNames(decl),
                    ParameterTypes = GetParameterTypes(decl),
                    ResultType = decl.Signature.GenerateResultSignature()
                }
                .TransformText()));
            
            #line default
            #line hidden
            
            #line 47 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"

            }
            
            #line default
            #line hidden
            this.Write("\r\n\r\n            [DebuggerStepperBoundary]\r\n            static ");
            
            #line 52 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("()\r\n            {\r\n                Type targetType = typeof(T);\r\n                " +
                    "MethodInfo extensionMethod;");
            
            #line 55 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"

                
                foreach (var decl in Functions)
                {
                    
            
            #line default
            #line hidden
            
            #line 59 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(new InterfaceFuncInitTemplate
                    {
                        FunctionName = decl.Name,
                        InterfaceName = InterfaceName
                    }
                    .TransformText()));
            
            #line default
            #line hidden
            
            #line 64 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"

                }
            
            #line default
            #line hidden
            this.Write("\r\n            }\r\n\r\n            [MethodImpl(MethodImplOptions.AggressiveInlining)," +
                    " DebuggerNonUserCode]\r\n            public static explicit operator ");
            
            #line 70 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T>(T target) => new ");
            
            #line 70 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> { m_target = target };\r\n\r\n            // Enable comparisons between nil and ");
            
            #line 72 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> interface instance\r\n            [MethodImpl(MethodImplOptions.AggressiveInlin" +
                    "ing)]\r\n            public static bool operator ==(");
            
            #line 74 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> value, NilType nil) => (object)value == null || Activator.CreateInstance<");
            
            #line 74 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T>>().Equals(value);\r\n\r\n            [MethodImpl(MethodImplOptions.AggressiveInli" +
                    "ning)]\r\n            public static bool operator !=(");
            
            #line 77 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> value, NilType nil) => !(value == nil);\r\n\r\n            [MethodImpl(MethodImpl" +
                    "Options.AggressiveInlining)]\r\n            public static bool operator ==(NilType" +
                    " nil, ");
            
            #line 80 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> value) => value == nil;\r\n\r\n            [MethodImpl(MethodImplOptions.Aggressi" +
                    "veInlining)]\r\n            public static bool operator !=(NilType nil, ");
            
            #line 83 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> value) => value != nil;\r\n        }\r\n\r\n        [");
            
            #line 86 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GeneratedCodeAttribute));
            
            #line default
            #line hidden
            this.Write(", MethodImpl(MethodImplOptions.AggressiveInlining), DebuggerNonUserCode]\r\n       " +
                    " ");
            
            #line 87 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Scope));
            
            #line default
            #line hidden
            this.Write(" static ");
            
            #line 87 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 87 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("_cast<T>(T target)\r\n        {\r\n            if (typeof(");
            
            #line 89 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(").IsAssignableFrom(typeof(T)))\r\n                return target as ");
            
            #line 90 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n            return (");
            
            #line 92 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T>)target;\r\n        }\r\n    }\r\n");
            
            #line 95 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespaceFooter));
            
            #line default
            #line hidden
            this.Write("\r\n\r\nnamespace go\r\n{\r\n    public partial class NilType\r\n    {\r\n        // Enable c" +
                    "omparisons between nil and ");
            
            #line 101 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(" interface\r\n        [MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n        p" +
                    "ublic static bool operator ==(");
            
            #line 103 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespacePrefix));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 103 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_package.");
            
            #line 103 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(" value, NilType nil) => (object)value == null || Activator.CreateInstance(value.G" +
                    "etType()).Equals(value);\r\n\r\n        [MethodImpl(MethodImplOptions.AggressiveInli" +
                    "ning)]\r\n        public static bool operator !=(");
            
            #line 106 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespacePrefix));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 106 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_package.");
            
            #line 106 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(" value, NilType nil) => !(value == nil);\r\n\r\n        [MethodImpl(MethodImplOptions" +
                    ".AggressiveInlining)]\r\n        public static bool operator ==(NilType nil, ");
            
            #line 109 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespacePrefix));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 109 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_package.");
            
            #line 109 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(" value) => value == nil;\r\n\r\n        [MethodImpl(MethodImplOptions.AggressiveInlin" +
                    "ing)]\r\n        public static bool operator !=(NilType nil, ");
            
            #line 112 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespacePrefix));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 112 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_package.");
            
            #line 112 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(" value) => value != nil;\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 114 "D:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"

// Template Parameters
public string NamespacePrefix;
public string NamespaceHeader;
public string NamespaceFooter;
public string PackageName;
public string InterfaceName;
public string Scope;
public InterfaceInfo Interface;
public IEnumerable<FunctionSignature> Functions;
public IEnumerable<string> UsingStatements;

private string GetParameterNames(FunctionSignature function)
{
    string parameterNames = function.GetParameterNames();

    if (parameterNames.Length > 0)
        parameterNames = ", " + parameterNames;

    return parameterNames;
}

private string GetParameterTypes(FunctionSignature function)
{
    string parameterTypes = function.GetParameterTypes();

    if (parameterTypes.Length > 0)
        parameterTypes = ", " + parameterTypes;

    return parameterTypes;
}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
