// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace go2cs.Templates
{
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class InterfaceTypeTemplate : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 1 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
 // This template creates a <PackageName>_<InterfaceName>Interface.cs file 
            
            #line default
            #line hidden
            this.Write(@"//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using goutil;

public static partial class ");
            
            #line 17 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_package\r\n{\r\n    [");
            
            #line 19 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GeneratedCodeAttribute));
            
            #line default
            #line hidden
            this.Write("]\r\n    ");
            
            #line 20 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Scope));
            
            #line default
            #line hidden
            this.Write(" class ");
            
            #line 20 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> : ");
            
            #line 20 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        private T m_target;");
            
            #line 22 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"

        
        foreach (var decl in Functions)
        {
            
            
            #line default
            #line hidden
            
            #line 26 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(new InterfaceFuncDeclTemplate
            {
                FunctionName = decl.functionName,
                Scope = decl.scope,
                ParameterSignature = decl.parameterSignature,
                NamedParameters = decl.namedParameters,
                ParameterTypes = decl.parameterTypes,
                ResultType = decl.resultType
            }
            .TransformText()));
            
            #line default
            #line hidden
            
            #line 35 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"

        }
        
        foreach (var decl in Actions)
        {
            
            
            #line default
            #line hidden
            
            #line 40 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(new InterfaceActionDeclTemplate
            {
                ActionName = decl.actionName,
                Scope = decl.scope,
                ParameterSignature = decl.parameterSignature,
                NamedParameters = decl.namedParameters,
                ParameterTypes = decl.parameterTypes
            }
            .TransformText()));
            
            #line default
            #line hidden
            
            #line 48 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"

        }
            
            #line default
            #line hidden
            this.Write("\r\n        [DebuggerStepperBoundary]\r\n        static ");
            
            #line 52 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            Type targetType = typeof(T);");
            
            #line 54 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"

        
            foreach (var decl in Functions)
            {
                
            
            #line default
            #line hidden
            
            #line 58 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(new InterfaceFuncInitTemplate
                {
                    FunctionName = decl.functionName,
                    InterfaceName = InterfaceName,
                    ParameterTypes = decl.parameterTypes,
                    ResultType = decl.resultType
                }
                .TransformText()));
            
            #line default
            #line hidden
            
            #line 65 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"

            }
            
            foreach (var decl in Actions)
            {
                
            
            #line default
            #line hidden
            
            #line 70 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(new InterfaceActionInitTemplate
                {
                    ActionName = decl.actionName,
                    InterfaceName = InterfaceName,
                    ParameterTypes = decl.parameterTypes
                }
                .TransformText()));
            
            #line default
            #line hidden
            
            #line 76 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"

            }
            
            #line default
            #line hidden
            this.Write("        }\r\n\r\n        [MethodImpl(MethodImplOptions.AggressiveInlining), DebuggerN" +
                    "onUserCode]\r\n        public static explicit operator ");
            
            #line 81 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T>(T target) => return new ");
            
            #line 81 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> { m_target = target };\r\n    }\r\n\r\n    [");
            
            #line 84 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GeneratedCodeAttribute));
            
            #line default
            #line hidden
            this.Write(", MethodImpl(MethodImplOptions.AggressiveInlining), DebuggerNonUserCode]\r\n    ");
            
            #line 85 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Scope));
            
            #line default
            #line hidden
            this.Write(" static ");
            
            #line 85 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 85 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("_cast<T>(T target) => (");
            
            #line 85 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T>)target;\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 87 "C:\Projects\go2cs\src\go2cs\Templates\InterfaceTypeTemplate.tt"

// Template Parameters
public string PackageName;
public string InterfaceName;
public string Scope;
public (string functionName, string scope, string parameterSignature, string namedParameters, string parameterTypes, string resultType)[] Functions;
public (string actionName, string scope, string parameterSignature, string namedParameters, string parameterTypes)[] Actions;

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
