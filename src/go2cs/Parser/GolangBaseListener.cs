//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Golang.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IGolangListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class GolangBaseListener : IGolangListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.sourceFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSourceFile([NotNull] GolangParser.SourceFileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.sourceFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSourceFile([NotNull] GolangParser.SourceFileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.packageClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPackageClause([NotNull] GolangParser.PackageClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.packageClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPackageClause([NotNull] GolangParser.PackageClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.importDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportDecl([NotNull] GolangParser.ImportDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.importDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportDecl([NotNull] GolangParser.ImportDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.importSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportSpec([NotNull] GolangParser.ImportSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.importSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportSpec([NotNull] GolangParser.ImportSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.importPath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportPath([NotNull] GolangParser.ImportPathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.importPath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportPath([NotNull] GolangParser.ImportPathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.topLevelDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTopLevelDecl([NotNull] GolangParser.TopLevelDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.topLevelDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTopLevelDecl([NotNull] GolangParser.TopLevelDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] GolangParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] GolangParser.DeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.constDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstDecl([NotNull] GolangParser.ConstDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.constDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstDecl([NotNull] GolangParser.ConstDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.constSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstSpec([NotNull] GolangParser.ConstSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.constSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstSpec([NotNull] GolangParser.ConstSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.identifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierList([NotNull] GolangParser.IdentifierListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.identifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierList([NotNull] GolangParser.IdentifierListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionList([NotNull] GolangParser.ExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionList([NotNull] GolangParser.ExpressionListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.typeDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDecl([NotNull] GolangParser.TypeDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.typeDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDecl([NotNull] GolangParser.TypeDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.typeSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeSpec([NotNull] GolangParser.TypeSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.typeSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeSpec([NotNull] GolangParser.TypeSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.functionDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDecl([NotNull] GolangParser.FunctionDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.functionDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDecl([NotNull] GolangParser.FunctionDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] GolangParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] GolangParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDecl([NotNull] GolangParser.MethodDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDecl([NotNull] GolangParser.MethodDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.receiver"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReceiver([NotNull] GolangParser.ReceiverContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.receiver"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReceiver([NotNull] GolangParser.ReceiverContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDecl([NotNull] GolangParser.VarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDecl([NotNull] GolangParser.VarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.varSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarSpec([NotNull] GolangParser.VarSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.varSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarSpec([NotNull] GolangParser.VarSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] GolangParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] GolangParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementList([NotNull] GolangParser.StatementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementList([NotNull] GolangParser.StatementListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] GolangParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] GolangParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.simpleStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleStmt([NotNull] GolangParser.SimpleStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.simpleStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleStmt([NotNull] GolangParser.SimpleStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.expressionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionStmt([NotNull] GolangParser.ExpressionStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.expressionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionStmt([NotNull] GolangParser.ExpressionStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.sendStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSendStmt([NotNull] GolangParser.SendStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.sendStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSendStmt([NotNull] GolangParser.SendStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.incDecStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncDecStmt([NotNull] GolangParser.IncDecStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.incDecStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncDecStmt([NotNull] GolangParser.IncDecStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] GolangParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] GolangParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.assign_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_op([NotNull] GolangParser.Assign_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.assign_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_op([NotNull] GolangParser.Assign_opContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.shortVarDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShortVarDecl([NotNull] GolangParser.ShortVarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.shortVarDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShortVarDecl([NotNull] GolangParser.ShortVarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.emptyStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmptyStmt([NotNull] GolangParser.EmptyStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.emptyStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmptyStmt([NotNull] GolangParser.EmptyStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.labeledStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabeledStmt([NotNull] GolangParser.LabeledStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.labeledStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabeledStmt([NotNull] GolangParser.LabeledStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStmt([NotNull] GolangParser.ReturnStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStmt([NotNull] GolangParser.ReturnStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.breakStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStmt([NotNull] GolangParser.BreakStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.breakStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStmt([NotNull] GolangParser.BreakStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.continueStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueStmt([NotNull] GolangParser.ContinueStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.continueStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueStmt([NotNull] GolangParser.ContinueStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.gotoStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGotoStmt([NotNull] GolangParser.GotoStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.gotoStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGotoStmt([NotNull] GolangParser.GotoStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.fallthroughStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFallthroughStmt([NotNull] GolangParser.FallthroughStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.fallthroughStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFallthroughStmt([NotNull] GolangParser.FallthroughStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.deferStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeferStmt([NotNull] GolangParser.DeferStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.deferStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeferStmt([NotNull] GolangParser.DeferStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStmt([NotNull] GolangParser.IfStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStmt([NotNull] GolangParser.IfStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.switchStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStmt([NotNull] GolangParser.SwitchStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.switchStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStmt([NotNull] GolangParser.SwitchStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.exprSwitchStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprSwitchStmt([NotNull] GolangParser.ExprSwitchStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.exprSwitchStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprSwitchStmt([NotNull] GolangParser.ExprSwitchStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.exprCaseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprCaseClause([NotNull] GolangParser.ExprCaseClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.exprCaseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprCaseClause([NotNull] GolangParser.ExprCaseClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.exprSwitchCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprSwitchCase([NotNull] GolangParser.ExprSwitchCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.exprSwitchCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprSwitchCase([NotNull] GolangParser.ExprSwitchCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.typeSwitchStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeSwitchStmt([NotNull] GolangParser.TypeSwitchStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.typeSwitchStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeSwitchStmt([NotNull] GolangParser.TypeSwitchStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.typeSwitchGuard"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeSwitchGuard([NotNull] GolangParser.TypeSwitchGuardContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.typeSwitchGuard"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeSwitchGuard([NotNull] GolangParser.TypeSwitchGuardContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.typeCaseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeCaseClause([NotNull] GolangParser.TypeCaseClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.typeCaseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeCaseClause([NotNull] GolangParser.TypeCaseClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.typeSwitchCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeSwitchCase([NotNull] GolangParser.TypeSwitchCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.typeSwitchCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeSwitchCase([NotNull] GolangParser.TypeSwitchCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.typeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeList([NotNull] GolangParser.TypeListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.typeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeList([NotNull] GolangParser.TypeListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.selectStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectStmt([NotNull] GolangParser.SelectStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.selectStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectStmt([NotNull] GolangParser.SelectStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.commClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommClause([NotNull] GolangParser.CommClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.commClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommClause([NotNull] GolangParser.CommClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.commCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommCase([NotNull] GolangParser.CommCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.commCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommCase([NotNull] GolangParser.CommCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.recvStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecvStmt([NotNull] GolangParser.RecvStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.recvStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecvStmt([NotNull] GolangParser.RecvStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.forStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStmt([NotNull] GolangParser.ForStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.forStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStmt([NotNull] GolangParser.ForStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.forClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForClause([NotNull] GolangParser.ForClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.forClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForClause([NotNull] GolangParser.ForClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.rangeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRangeClause([NotNull] GolangParser.RangeClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.rangeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRangeClause([NotNull] GolangParser.RangeClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.goStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGoStmt([NotNull] GolangParser.GoStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.goStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGoStmt([NotNull] GolangParser.GoStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] GolangParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] GolangParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeName([NotNull] GolangParser.TypeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeName([NotNull] GolangParser.TypeNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.typeLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeLit([NotNull] GolangParser.TypeLitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.typeLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeLit([NotNull] GolangParser.TypeLitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.arrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayType([NotNull] GolangParser.ArrayTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.arrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayType([NotNull] GolangParser.ArrayTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.arrayLength"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayLength([NotNull] GolangParser.ArrayLengthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.arrayLength"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayLength([NotNull] GolangParser.ArrayLengthContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.elementType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementType([NotNull] GolangParser.ElementTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.elementType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementType([NotNull] GolangParser.ElementTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.pointerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointerType([NotNull] GolangParser.PointerTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.pointerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointerType([NotNull] GolangParser.PointerTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.interfaceType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceType([NotNull] GolangParser.InterfaceTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.interfaceType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceType([NotNull] GolangParser.InterfaceTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.sliceType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSliceType([NotNull] GolangParser.SliceTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.sliceType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSliceType([NotNull] GolangParser.SliceTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.mapType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMapType([NotNull] GolangParser.MapTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.mapType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMapType([NotNull] GolangParser.MapTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.channelType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChannelType([NotNull] GolangParser.ChannelTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.channelType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChannelType([NotNull] GolangParser.ChannelTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.methodSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodSpec([NotNull] GolangParser.MethodSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.methodSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodSpec([NotNull] GolangParser.MethodSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.functionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionType([NotNull] GolangParser.FunctionTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.functionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionType([NotNull] GolangParser.FunctionTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.signature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSignature([NotNull] GolangParser.SignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.signature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSignature([NotNull] GolangParser.SignatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.result"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResult([NotNull] GolangParser.ResultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.result"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResult([NotNull] GolangParser.ResultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameters([NotNull] GolangParser.ParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameters([NotNull] GolangParser.ParametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterList([NotNull] GolangParser.ParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterList([NotNull] GolangParser.ParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.parameterDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterDecl([NotNull] GolangParser.ParameterDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.parameterDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterDecl([NotNull] GolangParser.ParameterDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperand([NotNull] GolangParser.OperandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperand([NotNull] GolangParser.OperandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] GolangParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] GolangParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.basicLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBasicLit([NotNull] GolangParser.BasicLitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.basicLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBasicLit([NotNull] GolangParser.BasicLitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.operandName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperandName([NotNull] GolangParser.OperandNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.operandName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperandName([NotNull] GolangParser.OperandNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.qualifiedIdent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifiedIdent([NotNull] GolangParser.QualifiedIdentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.qualifiedIdent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifiedIdent([NotNull] GolangParser.QualifiedIdentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.compositeLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompositeLit([NotNull] GolangParser.CompositeLitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.compositeLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompositeLit([NotNull] GolangParser.CompositeLitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.literalType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralType([NotNull] GolangParser.LiteralTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.literalType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralType([NotNull] GolangParser.LiteralTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.literalValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralValue([NotNull] GolangParser.LiteralValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.literalValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralValue([NotNull] GolangParser.LiteralValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.elementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementList([NotNull] GolangParser.ElementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.elementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementList([NotNull] GolangParser.ElementListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.keyedElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyedElement([NotNull] GolangParser.KeyedElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.keyedElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyedElement([NotNull] GolangParser.KeyedElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKey([NotNull] GolangParser.KeyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKey([NotNull] GolangParser.KeyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElement([NotNull] GolangParser.ElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElement([NotNull] GolangParser.ElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.structType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructType([NotNull] GolangParser.StructTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.structType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructType([NotNull] GolangParser.StructTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.fieldDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldDecl([NotNull] GolangParser.FieldDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.fieldDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldDecl([NotNull] GolangParser.FieldDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.anonymousField"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymousField([NotNull] GolangParser.AnonymousFieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.anonymousField"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymousField([NotNull] GolangParser.AnonymousFieldContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.functionLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionLit([NotNull] GolangParser.FunctionLitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.functionLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionLit([NotNull] GolangParser.FunctionLitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.primaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryExpr([NotNull] GolangParser.PrimaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.primaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryExpr([NotNull] GolangParser.PrimaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.selector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelector([NotNull] GolangParser.SelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.selector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelector([NotNull] GolangParser.SelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.index"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndex([NotNull] GolangParser.IndexContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.index"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndex([NotNull] GolangParser.IndexContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.slice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSlice([NotNull] GolangParser.SliceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.slice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSlice([NotNull] GolangParser.SliceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.typeAssertion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeAssertion([NotNull] GolangParser.TypeAssertionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.typeAssertion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeAssertion([NotNull] GolangParser.TypeAssertionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArguments([NotNull] GolangParser.ArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArguments([NotNull] GolangParser.ArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.methodExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodExpr([NotNull] GolangParser.MethodExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.methodExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodExpr([NotNull] GolangParser.MethodExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.receiverType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReceiverType([NotNull] GolangParser.ReceiverTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.receiverType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReceiverType([NotNull] GolangParser.ReceiverTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] GolangParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] GolangParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.unaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpr([NotNull] GolangParser.UnaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.unaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpr([NotNull] GolangParser.UnaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.conversion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConversion([NotNull] GolangParser.ConversionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.conversion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConversion([NotNull] GolangParser.ConversionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GolangParser.eos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEos([NotNull] GolangParser.EosContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GolangParser.eos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEos([NotNull] GolangParser.EosContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
